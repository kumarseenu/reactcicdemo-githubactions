name: deploy app
# on: [push,workflow_dispatch]
on:
  push:
    branches: 
      - main
      - 'feature/*'
    paths-ignore:
      - README.md
      - '.github/workflows/*'
  workflow_dispatch:


jobs:
   test:
     runs-on: ubuntu-latest
     steps:
     - name: get code
       uses: actions/checkout@v4
       #run: |
           # echo "clone repo on remote server"
           # echo "${{toJson(github)}}"
           # git clone https://github.com/${{github.repository}}.git myfiles
           # cd myfiles && ls

     - name: setup node js
       uses: actions/setup-node@v4
       with:
         node-version: '22'
     - name: Cache    
       uses: actions/cache@v4
       id: npm-cache
       with:
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

     - name: print node version
       run: |
         echo "node version is $(node -v)"  
         echo "npm version is $(npm -v)"

     - name: install dependencies
       if: steps.npm-cache.outputs.cache-hit != 'true'
       run: |
         echo "installing dependencies"
         npm install

     - name: run tests
       run: |
         echo "running tests"
         npm run test

     - name: complete job
       run: echo "job completed"
   build:    
     needs: test

     runs-on: ubuntu-latest
     steps:
     - name: get code
       uses: actions/checkout@v4

     - name: setup node js
       uses: actions/setup-node@v4
       with:
         node-version: '22'
     - name: Cache    
       uses: actions/cache@v4
       id: npm-cache
       with:
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

     - name: install dependencies
       if: steps.npm-cache.outputs.cache-hit != 'true'
       run: |
         echo "installing dependencies"
         npm install

     - name: run build
       run: |
         echo "running build"
         npm run build
     - name: upload artifacts
       uses: actions/upload-artifact@v4
       with:
        name: upload-files
        path: dist

     - name: complete job
       run: echo "build job completed"
   deploy:
        needs: build
        runs-on: ubuntu-latest
        steps:
        - name: download artifacts
          uses: actions/download-artifact@v4
          with:
            name: upload-files
            path: dist
        - name: deploy dist
          run: |
            ls dist
            echo "dist directory displayed"
    
      